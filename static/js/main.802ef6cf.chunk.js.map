{"version":3,"sources":["main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","state","url","loading","receivedStreams","streams","error","handleURL","bind","handleSubmit","isEdge","document","documentMode","window","StyleMedia","isChrome","chrome","runtime","event","this","setState","target","value","data","FormData","append","fetch","method","body","then","response","json","className","desc","src","controls","browserIsValid","rel","href","id","type","placeholder","onChange","renderLoading","onClick","renderStreams","Component","App","addEventListener","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.802ef6cf.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url: \"\",\r\n      loading: false,\r\n      receivedStreams: false,\r\n      streams: null,\r\n      error: \"\",\r\n    };\r\n    this.handleURL = this.handleURL.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  browserIsValid() {\r\n    var isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n    var isEdge = !isIE && !!window.StyleMedia;\r\n    var isChrome = !!window.chrome && !!window.chrome.runtime;\r\n    return (isEdge || isChrome);\r\n  }\r\n\r\n  handleURL(event) {\r\n    this.setState({url: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.setState({\r\n      loading: true,\r\n      receivedStreams: false,\r\n      error: \"\",\r\n    });\r\n\r\n    let data = new FormData();\r\n    data.append('url', this.state.url);\r\n\r\n    fetch(\"http://ytscoop.com/api.php\", {\r\n      method: 'POST',\r\n      body: data,\r\n    })\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      if (json[0] === \"Invalid URL\") {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"The URL wasn't recognized as a YouTube watch page URL.\"\r\n        })\r\n      } else if (json[0] === \"Unclear error\") {\r\n        this.setState({\r\n          loading: false,\r\n          error: \"That video couldn't be processed-- it may be private or deleted.\"\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n          receivedStreams: true,\r\n          streams: json,\r\n          error: \"\",\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  renderLoading() {\r\n    return (\r\n      <div className=\"loading\">\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderStreams() {\r\n    return (\r\n      <div>\r\n        <div className=\"streams\">\r\n\r\n          <div className=\"stream_wrapper\">\r\n            <span className=\"stream_name\">Best Video (no audio)</span>\r\n            <div className=\"stream_desc\">{this.state.streams[1].desc}</div>\r\n            <div className=\"stream_interface\">\r\n              PLEASE DO NOT REUSE THIS LINK. Abuse of the source URLs could force the website to close down.\r\n              <audio src={this.state.streams[1].url} controls></audio>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"stream_wrapper\">\r\n            <span className=\"stream_name\">Best Audio (no video)</span>\r\n            <div className=\"stream_desc\">{this.state.streams[2].desc}</div>\r\n            <div className=\"stream_interface\">\r\n              PLEASE DO NOT REUSE THIS LINK. Abuse of the source URLs could force the website to close down.\r\n              <audio src={this.state.streams[2].url} controls></audio>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"stream_wrapper\">\r\n            <span className=\"stream_name\">Best Combined</span>\r\n            <div className=\"stream_desc\">{this.state.streams[0].desc}</div>\r\n            <div className=\"stream_interface\">\r\n              PLEASE DO NOT REUSE THIS LINK. Abuse of the source URLs could force the website to close down.\r\n              <audio src={this.state.streams[0].url} controls></audio>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"explanation1\">\r\n          To download a stream, click on the three dots to the right of its controls, then click 'Download'.\r\n        </div>\r\n        <div className=\"explanation2\">\r\n          YouTube stores multiple 'streams' for every video, with varying formats and levels of quality.<br />\r\n          Only some streams contain both video and audio, and such streams are generally lower in quality than streams that contain only one or the other.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.browserIsValid()) {\r\n      return (\r\n        <div className=\"main_wrapper\">\r\n          <div className=\"main\">\r\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Oswald:wght@500&family=Roboto:wght@300&display=swap\" rel=\"stylesheet\" />\r\n\r\n            <div className=\"title\">YouTube Scoop</div>\r\n            <div className=\"subtitle\">A clean, no-frills tool for downloading YouTube videos.</div>\r\n            <input id=\"url_input\" type=\"text\" placeholder=\"enter a video URL\" value={this.state.url} onChange={this.handleURL} /><br />\r\n\r\n            {this.state.loading ? this.renderLoading() : <button className=\"url_submit\" onClick={()=>this.handleSubmit()}>Go</button>}\r\n            {this.state.error != \"\" ? <div className=\"warning\">{this.state.error}</div> : null}\r\n            {this.state.receivedStreams ? this.renderStreams() : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"main_wrapper\">\r\n          <div className=\"main\">\r\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\r\n            <link href=\"https://fonts.googleapis.com/css2?family=Oswald:wght@500&family=Roboto:wght@300&display=swap\" rel=\"stylesheet\" />\r\n\r\n            <div className=\"title\">YouTube Scoop</div>\r\n            <div className=\"subtitle\">A clean, no-frills tool for downloading YouTube videos.</div>\r\n            <div className=\"warning\">\r\n              Your browser is not currently supported by YouTube Scoop.<br/>\r\n              Please use Google Chrome, Microsoft Edge, or a Chrome-based browser.\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import Main from './main.js';\n\nimport './App.css';\n\nfunction App() {\n  document.addEventListener('contextmenu', event => event.preventDefault());\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}